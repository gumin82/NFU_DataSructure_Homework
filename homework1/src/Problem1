#include <iostream>
using namespace std;

 int Ackermann(int m, int n) {
    if (m == 0)
        return n + 1;
    else if (n == 0)
        return Ackermann(m - 1, 1);
    else
        return Ackermann(m - 1, Ackermann(m, n - 1));
}

int Ackermann_nonRecursive(int m, int n) {
    const int MAX = 10000;
    int stack[MAX];
    int top = -1;

    stack[++top] = m;
    while (top >= 0) {
        m = stack[top--];
        if (m == 0)
            n = n + 1;
        else if (n == 0) {
            n = 1;
            stack[++top] = m - 1;
        }
        else {
            stack[++top] = m - 1;
            stack[++top] = m;
            n = n - 1;
        }
    }
    return n;
}

int main() {
    int m, n;
    cout << "Enter m and n: ";
    cin >> m >> n;

    cout << "Recursive result: " << Ackermann(m, n) << endl;
    cout << "Non-recursive result: " << Ackermann_nonRecursive(m, n) << endl;

    return 0;
}
